% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.R
\name{lscv}
\alias{lscv}
\title{Least Squares Cross-Validation criterion function}
\usage{
lscv(h, data, estimator, ...)
}
\arguments{
\item{h}{a vector of bandwidths at which to evaluate \eqn{CV(h)}}

\item{data}{the data, specified as a data frame containing two components \code{x} and \code{y}}

\item{estimator}{an R function for the estimator, with inputs and return type similar to \code{local_average} and \code{nw}}

\item{...}{additional arguments to be passed to the estimator (e.g. \code{kernel}, \code{empty_nhood})}
}
\value{
The function returns a list with components
   \item{h}{the vector of bandwidths used}
   \item{cv}{a vector containing the computed values of \eqn{CV(h)}}
}
\description{
This function computes the leave-one-out cross-validation criterion \eqn{CV(h)} for the trial bandwidths supplied in the vector \code{h}, where
\deqn{ CV(h) = \frac{1}{n}\sum_{i=1}^{n} (Y_i-\hat{m}^{(-i)}_h(x_i))^2 }
Used in \code{find_hcv} to find an optimal data-driven bandwidth.
}
\examples{
  # simulate and plot some data
  m <- function(x) (x^2+1)*sin(2*pi*x*((1-x) + 4*x))
  x <- sort(runif(100))
  y <- m(x) + rnorm(length(x), sd=0.1)
  simdata <- data.frame(x=x,y=y)

  # create sequence of bandwidths, compute and plot CV function
  h <- seq(from=0,to=0.1,length=100)
  info <- lscv(h, simdata, nw, kernel=gauss)
  plot(info$h,info$cv, type="l", xlab="h", ylab="CV(h)")

}
\seealso{
find_hcv
}
